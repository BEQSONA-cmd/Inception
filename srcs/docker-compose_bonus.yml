version: "3.5"

services:
  nginx:
    container_name: nginx
    build: ./nginx/.
    image: nginx:42
    ports:
      - "443:443"
    depends_on:
      - wordpress
    volumes:
      - wordpress:/var/www/wordpress
      - ../secrets/ssl:/etc/nginx/ssl
    networks:
      - inception
    restart: always

  wordpress:
    container_name: wordpress
    build: ./wordpress/.
    image: wordpress:42
    depends_on:
      - mariadb
    volumes:
      - wordpress:/var/www/wordpress
    networks:
      - inception
    restart: always

  mariadb:
    container_name: mariadb
    build: ./mariadb/.
    image: mariadb:42
    volumes:
      - mariadb:/var/lib/mysql
    networks:
      - inception
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}

  redis:
    container_name: redis
    build: ./bonus/redis_cache/.
    image: redis:42
    ports:
      - "6379:6379"
    networks:
      - inception
    restart: always
  
  ftp:
    container_name: ftp
    build: 
      context: ./bonus/ftp/.
      args:
        FTP_PASSWORD: ${FTP_PASSWORD}
    image: ftp:42
    ports:
      - "21:21"
      - "30000-30010:30000-30010"
    volumes:
      - wordpress:/home/ftpuser/wordpress
    networks:
      - inception
    restart: always

  adminer:
    container_name: adminer
    build: ./bonus/adminer/.
    image: adminer:42
    ports:
      - "8000:8000"
    networks:
      - inception
    restart: always
  
  chat:
    container_name: chat
    build: ./bonus/chat/.
    image: chat:42
    ports:
      - "8080:8080"
    networks:
      - inception
    restart: always

volumes:
  wordpress:
    name: wordpress
    driver: local
    driver_opts:
      o: bind
      type: none
      device: ${HOME}/data/wordpress
  mariadb:
    name: mariadb
    driver: local
    driver_opts:
      o: bind
      type: none
      device: ${HOME}/data/mariadb

networks:
  inception:
    name: inception

